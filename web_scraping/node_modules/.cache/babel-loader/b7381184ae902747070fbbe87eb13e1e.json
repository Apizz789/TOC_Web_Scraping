{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MrZOMBIT\\\\Desktop\\\\2021\\\\Works\\\\CE3D\\\\Software Studio\\\\TOC_Web_Scraping\\\\web_scraping\\\\src\\\\components\\\\Navbar\\\\CategoryDropdown.js\",\n    _s = $RefreshSig$();\n\nimport '../../css/categoryDropdown.style.css';\nimport categoryList from '../../resources/categoryList.js';\nimport { faCaretLeft, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SubCategoryDropdown from './SubCategoryDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tog = {\n  toggle: false\n};\n\nfunction CategoryDropdown(props) {\n  _s();\n\n  const [toggle, setToggle] = useState(categoryList);\n\n  const toggleHandle = (name, val) => {\n    const newToggle = toggle.map(obj => obj.title == name ? { ...obj,\n      toggle: val\n    } : obj);\n    alert(\"set to \" + val);\n    setToggle(newToggle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"CategoryCard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"dropdown-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"dropdown-pad\",\n        children: toggle.map(each => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"main-category-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"category-list\",\n            children: each.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), !each.toggle && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCaretRight,\n            class: \"toggle-icon\",\n            onClick: e => toggleHandle(each.title, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 32\n          }, this), each.toggle && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCaretLeft,\n            class: \"toggle-icon\",\n            onClick: e => toggleHandle(each.title, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 31\n          }, this), each.toggle && /*#__PURE__*/_jsxDEV(SubCategoryDropdown, {\n            subCategory: each.subCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoryDropdown, \"rA5e2EG9xemTtwlfqCwxmWWsOm8=\");\n\n_c = CategoryDropdown;\nexport default CategoryDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryDropdown\");","map":{"version":3,"sources":["C:/Users/MrZOMBIT/Desktop/2021/Works/CE3D/Software Studio/TOC_Web_Scraping/web_scraping/src/components/Navbar/CategoryDropdown.js"],"names":["categoryList","faCaretLeft","faCaretRight","React","useState","useEffect","FontAwesomeIcon","SubCategoryDropdown","tog","toggle","CategoryDropdown","props","setToggle","toggleHandle","name","val","newToggle","map","obj","title","alert","each","e","subCategory"],"mappings":";;;AAAA,OAAO,sCAAP;AACA,OAAOA,YAAP,MAAyB,iCAAzB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,mCAA1C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAEA,IAAIC,GAAG,GAAG;AAACC,EAAAA,MAAM,EAAE;AAAT,CAAV;;AACA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/B,QAAM,CAACF,MAAD,EAASG,SAAT,IAAsBR,QAAQ,CAACJ,YAAD,CAApC;;AAEA,QAAMa,YAAY,GAAG,CAACC,IAAD,EAAMC,GAAN,KAAc;AACjC,UAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAP,CAAWC,GAAG,IAC9BA,GAAG,CAACC,KAAJ,IAAaL,IAAb,GAAoB,EAAE,GAAGI,GAAL;AAAUT,MAAAA,MAAM,EAAEM;AAAlB,KAApB,GAA8CG,GAD9B,CAAlB;AAGAE,IAAAA,KAAK,CAAC,YAAUL,GAAX,CAAL;AACAH,IAAAA,SAAS,CAACI,SAAD,CAAT;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,eAAX;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,cAAX;AAAA,kBACGP,MAAM,CAACQ,GAAP,CAAYI,IAAD,iBACV;AAAK,UAAA,KAAK,EAAC,mBAAX;AAAA,kCACE;AAAK,YAAA,KAAK,EAAC,eAAX;AAAA,sBAA4BA,IAAI,CAACF;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,CAACE,IAAI,CAACZ,MAAN,iBAAgB,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEP,YAAvB;AAAqC,YAAA,KAAK,EAAC,aAA3C;AAAyD,YAAA,OAAO,EAAGoB,CAAD,IAAOT,YAAY,CAACQ,IAAI,CAACF,KAAN,EAAY,IAAZ;AAArF;AAAA;AAAA;AAAA;AAAA,kBAFnB,EAGGE,IAAI,CAACZ,MAAL,iBAAe,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAER,WAAvB;AAAoC,YAAA,KAAK,EAAC,aAA1C;AAAwD,YAAA,OAAO,EAAGqB,CAAD,IAAOT,YAAY,CAACQ,IAAI,CAACF,KAAN,EAAY,KAAZ;AAApF;AAAA;AAAA;AAAA;AAAA,kBAHlB,EAIGE,IAAI,CAACZ,MAAL,iBAAe,QAAC,mBAAD;AAAqB,YAAA,WAAW,EAAEY,IAAI,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3BQb,gB;;KAAAA,gB;AA6BT,eAAeA,gBAAf","sourcesContent":["import '../../css/categoryDropdown.style.css'\r\nimport categoryList from '../../resources/categoryList.js'\r\nimport { faCaretLeft, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React, { useState, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SubCategoryDropdown from './SubCategoryDropdown';\r\n\r\nlet tog = {toggle: false}\r\nfunction CategoryDropdown(props) {\r\n  const [toggle, setToggle] = useState(categoryList)\r\n\r\n  const toggleHandle = (name,val) => {\r\n    const newToggle = toggle.map(obj =>\r\n      obj.title == name ? { ...obj, toggle: val } : obj\r\n  )\r\n    alert(\"set to \"+val)\r\n    setToggle(newToggle)\r\n  }\r\n\r\n  return (\r\n    <div class=\"CategoryCard\">\r\n      <div class=\"dropdown-menu\">\r\n        <div class=\"dropdown-pad\">\r\n          {toggle.map((each) =>\r\n            <div class=\"main-category-row\">\r\n              <div class='category-list'>{each.title}</div>\r\n              {!each.toggle && <FontAwesomeIcon icon={faCaretRight} class=\"toggle-icon\" onClick={(e) => toggleHandle(each.title,true)} />}\r\n              {each.toggle && <FontAwesomeIcon icon={faCaretLeft} class=\"toggle-icon\" onClick={(e) => toggleHandle(each.title,false)} />}\r\n              {each.toggle && <SubCategoryDropdown subCategory={each.subCategory} />}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryDropdown"]},"metadata":{},"sourceType":"module"}