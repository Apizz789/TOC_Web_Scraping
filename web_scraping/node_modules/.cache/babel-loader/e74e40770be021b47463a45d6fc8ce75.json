{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MrZOMBIT\\\\Desktop\\\\2021\\\\Works\\\\CE3D\\\\Software Studio\\\\TOC_Web_Scraping\\\\web_scraping\\\\src\\\\components\\\\CategoryDropdown.js\",\n    _s = $RefreshSig$();\n\nimport '../css/categoryDropdown.style.css';\nimport categoryList from '../resources/categoryList.js';\nimport { faCaretLeft, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SubCategoryDropdown from './SubCategoryDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CategoryDropdown(props) {\n  _s();\n\n  const [toggle, setToggle] = useState([categoryList.map(each => ({\n    title: each.title,\n    keyword: each.keyword,\n    subCategory: each.subCategory,\n    toggle: false\n  }))]);\n\n  const toggleHandle = name => {\n    setToggle([toggle.map(each => each.title == name ? {\n      title: each.title,\n      keyword: each.keyword,\n      subCategory: each.subCategory,\n      toggle: !each.toggle\n    } : {\n      title: each.title,\n      keyword: each.keyword,\n      subCategory: each.subCategory,\n      toggle: each.toggle\n    })]);\n    const newTotal = toggle.reduce(function (newTotal, each) {\n      console.log(each.name);\n\n      if (each.name === name) {\n        newTotal.push({\n          title: each.title,\n          keyword: each.keyword,\n          subCategory: each.subCategory,\n          toggle: !each.toggle\n        });\n      } else {\n        newTotal.push({\n          title: each.title,\n          keyword: each.keyword,\n          subCategory: each.subCategory,\n          toggle: each.toggle\n        });\n      }\n\n      return newTotal;\n    }, []); // alert(newTotal[0].toggle)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"CategoryCard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"dropdown-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"dropdown-pad\",\n        children: categoryList.map(each => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"main-category-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"category-list\",\n            children: each.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), !each.toggle && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCaretRight,\n            class: \"toggle-icon\",\n            onClick: e => toggleHandle(each.title)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 32\n          }, this), each.toggle && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCaretLeft,\n            class: \"toggle-icon\",\n            onClick: e => toggleHandle(each.title)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 31\n          }, this), each.toggle && /*#__PURE__*/_jsxDEV(SubCategoryDropdown, {\n            subCategory: each.subCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoryDropdown, \"5Ap7K7ugOz0qenHaWGMfBLL6w7c=\");\n\n_c = CategoryDropdown;\nexport default CategoryDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryDropdown\");","map":{"version":3,"sources":["C:/Users/MrZOMBIT/Desktop/2021/Works/CE3D/Software Studio/TOC_Web_Scraping/web_scraping/src/components/CategoryDropdown.js"],"names":["categoryList","faCaretLeft","faCaretRight","React","useState","useEffect","FontAwesomeIcon","SubCategoryDropdown","CategoryDropdown","props","toggle","setToggle","map","each","title","keyword","subCategory","toggleHandle","name","newTotal","reduce","console","log","push","e"],"mappings":"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","sourcesContent":["import '../css/categoryDropdown.style.css'\r\nimport categoryList from '../resources/categoryList.js'\r\nimport { faCaretLeft, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React, { useState, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SubCategoryDropdown from './SubCategoryDropdown';\r\n\r\nfunction CategoryDropdown(props) {\r\n  const [toggle, setToggle] = useState([categoryList.map((each) => ({\r\n    title: each.title,\r\n    keyword: each.keyword,\r\n    subCategory: each.subCategory,\r\n    toggle: false\r\n  }))])\r\n\r\n  const toggleHandle = (name) => {\r\n    setToggle([toggle.map((each) => ( each.title == name ? {\r\n                                      title: each.title,\r\n                                      keyword: each.keyword,\r\n                                      subCategory: each.subCategory,\r\n                                      toggle: !each.toggle\r\n                                    } : {\r\n                                      title: each.title,\r\n                                      keyword: each.keyword,\r\n                                      subCategory: each.subCategory,\r\n                                      toggle: each.toggle\r\n                                    }))])\r\n    const newTotal = toggle.reduce(\r\n      function(newTotal, each){\r\n        console.log(each.name)\r\n\r\n        if(each.name === name){\r\n          newTotal.push({\r\n            title: each.title,\r\n            keyword: each.keyword,\r\n            subCategory: each.subCategory,\r\n            toggle: !each.toggle\r\n          });\r\n        }\r\n        else{\r\n          newTotal.push({\r\n            title: each.title,\r\n            keyword: each.keyword,\r\n            subCategory: each.subCategory,\r\n            toggle: each.toggle\r\n          })\r\n        }\r\n        return newTotal;\r\n    }, []);\r\n    // alert(newTotal[0].toggle)\r\n  }\r\n\r\n  return (\r\n    <div class=\"CategoryCard\">\r\n      <div class=\"dropdown-menu\">\r\n        <div class=\"dropdown-pad\">\r\n          {categoryList.map((each) =>\r\n            <div class=\"main-category-div\">\r\n              <div class='category-list'>{each.title}</div>\r\n              {!each.toggle && <FontAwesomeIcon icon={faCaretRight} class=\"toggle-icon\" onClick={(e) => toggleHandle(each.title)} />}\r\n              {each.toggle && <FontAwesomeIcon icon={faCaretLeft} class=\"toggle-icon\" onClick={(e) => toggleHandle(each.title)} />}\r\n              {each.toggle && <SubCategoryDropdown subCategory={each.subCategory} />}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryDropdown"]},"metadata":{},"sourceType":"module"}